{"version":3,"file":"comment-widget.umd.min.js","sources":["../src/api.js","../src/renderer.js","../src/theme-manager.js","../src/utils.js","../src/widget.js"],"sourcesContent":["/**\n * API Client for Comment Widget\n * Handles communication with FastAPI proxy\n */\n\nexport class APIClient {\n    constructor(baseUrl = 'https://comment-widget-backend.vercel.app') {\n        this.baseUrl = baseUrl;\n        this.defaultHeaders = {\n            'Content-Type': 'application/json'\n        };\n    }\n\n    async request(endpoint, options = {}) {\n        const url = `${this.baseUrl}${endpoint}`;\n        const config = {\n            headers: { ...this.defaultHeaders, ...options.headers },\n            ...options\n        };\n\n        try {\n            const response = await fetch(url, config);\n\n            if (!response.ok) {\n                const errorData = await response.json().catch(() => ({}));\n                throw new Error(errorData.detail || `HTTP ${response.status}: ${response.statusText}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            if (error.name === 'TypeError' && error.message.includes('fetch')) {\n                throw new Error('Network error: Unable to connect to API');\n            }\n            throw error;\n        }\n    }\n\n    // Comments API\n    async getComments(threadId, options = {}) {\n        const params = new URLSearchParams({\n            thread_id: threadId,\n            ...options\n        });\n\n        return this.request(`/widget/comments/${threadId}?${params}`);\n    }\n\n    async createComment(commentData) {\n        return this.request('/comments', {\n            method: 'POST',\n            body: JSON.stringify(commentData)\n        });\n    }\n\n    async updateComment(commentId, commentData) {\n        return this.request(`/comments/${commentId}`, {\n            method: 'PUT',\n            body: JSON.stringify(commentData)\n        });\n    }\n\n    async deleteComment(commentId) {\n        return this.request(`/comments/${commentId}`, {\n            method: 'DELETE'\n        });\n    }\n\n    async moderateComment(commentId, moderationData) {\n        return this.request(`/comments/${commentId}/moderate`, {\n            method: 'PUT',\n            body: JSON.stringify(moderationData)\n        });\n    }\n\n    // Threads API\n    async getThread(threadId) {\n        return this.request(`/threads/${threadId}`);\n    }\n\n    async createThread(threadData) {\n        return this.request('/threads', {\n            method: 'POST',\n            body: JSON.stringify(threadData)\n        });\n    }\n\n    // Demo API\n    async getDemoThread() {\n        return this.request('/demo/thread');\n    }\n\n    // Health check\n    async healthCheck() {\n        return this.request('/health');\n    }\n}","/**\n * Comment Renderer for Widget\n * Handles HTML rendering of comments with nesting\n */\n\nexport class CommentRenderer {\n    constructor() {\n        this.templates = {\n            widget: (data) => `\n                <div class=\"comment-widget\" data-theme=\"${data.theme}\">\n                    <div class=\"comment-header\">\n                        <h3>üí¨ Comments</h3>\n                        ${data.showThemeSelector ? this.renderThemeSelector(data.theme, data.onThemeChange) : ''}\n                    </div>\n\n                    ${data.error ? this.renderError(data.error) : ''}\n\n                    ${data.loading ? this.renderLoading() : ''}\n\n                    ${!data.loading && !data.error ? this.renderCommentForm(data.onSubmit) : ''}\n\n                    <div class=\"comment-list\">\n                        ${data.comments.length > 0\n                            ? data.comments.map(comment => this.renderComment(comment, 0, data.maxDepth)).join('')\n                            : this.renderEmptyState()\n                        }\n                    </div>\n                </div>\n            `,\n\n            comment: (comment, level, maxDepth) => `\n                <div class=\"comment-item level-${level}\" data-id=\"${comment.id}\">\n                    <div class=\"comment-avatar\">\n                        <div class=\"avatar-placeholder\">\n                            ${comment.author_name.charAt(0).toUpperCase()}\n                        </div>\n                    </div>\n                    <div class=\"comment-content\">\n                        <div class=\"comment-meta\">\n                            <span class=\"comment-author\">${this.escapeHtml(comment.author_name)}</span>\n                            <span class=\"comment-date\">${this.formatDate(comment.created_at)}</span>\n                        </div>\n                        <div class=\"comment-text\">${this.formatContent(comment.content)}</div>\n                        <div class=\"comment-actions\">\n                            ${level < maxDepth ? `<button class=\"reply-btn\" data-parent-id=\"${comment.id}\">Reply</button>` : ''}\n                        </div>\n                        ${comment.replies && comment.replies.length > 0\n                            ? `<div class=\"comment-replies\">${comment.replies.map(reply => this.renderComment(reply, level + 1, maxDepth)).join('')}</div>`\n                            : ''\n                        }\n                    </div>\n                </div>\n            `,\n\n            form: (onSubmit) => `\n                <form class=\"comment-form\" id=\"comment-form\">\n                    <div class=\"form-group\">\n                        <input type=\"text\" id=\"author-name\" placeholder=\"Your name\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"email\" id=\"author-email\" placeholder=\"Your email\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <textarea id=\"comment-content\" placeholder=\"Write your comment...\" required rows=\"4\"></textarea>\n                    </div>\n                    <div class=\"form-actions\">\n                        <button type=\"submit\" class=\"submit-btn\">Post Comment</button>\n                    </div>\n                </form>\n            `,\n\n            themeSelector: (currentTheme, onChange) => `\n                <select class=\"theme-selector\" id=\"theme-selector\">\n                    <option value=\"default\" ${currentTheme === 'default' ? 'selected' : ''}>Default</option>\n                    <option value=\"dark\" ${currentTheme === 'dark' ? 'selected' : ''}>Dark</option>\n                    <option value=\"matrix\" ${currentTheme === 'matrix' ? 'selected' : ''}>Matrix</option>\n                    <option value=\"neocities\" ${currentTheme === 'neocities' ? 'selected' : ''}>NeoCities</option>\n                    <option value=\"serene-mist\" ${currentTheme === 'serene-mist' ? 'selected' : ''}>Serene Mist</option>\n                    <option value=\"neon-pulse\" ${currentTheme === 'neon-pulse' ? 'selected' : ''}>Neon Pulse</option>\n                    <option value=\"geometric-prime\" ${currentTheme === 'geometric-prime' ? 'selected' : ''}>Geometric Prime</option>\n                    <option value=\"forest-flow\" ${currentTheme === 'forest-flow' ? 'selected' : ''}>Forest Flow</option>\n                    <option value=\"digital-chaos\" ${currentTheme === 'digital-chaos' ? 'selected' : ''}>Digital Chaos</option>\n                </select>\n            `,\n\n            loading: () => `\n                <div class=\"loading-state\">\n                    <div class=\"spinner\"></div>\n                    <p>Loading comments...</p>\n                </div>\n            `,\n\n            error: (message) => `\n                <div class=\"error-state\">\n                    <p>‚ùå ${this.escapeHtml(message)}</p>\n                </div>\n            `,\n\n            empty: () => `\n                <div class=\"empty-state\">\n                    <p>üí≠ No comments yet. Be the first to comment!</p>\n                </div>\n            `\n        };\n    }\n\n    render(data) {\n        return this.templates.widget(data);\n    }\n\n    renderComment(comment, level, maxDepth) {\n        return this.templates.comment(comment, level, maxDepth);\n    }\n\n    renderCommentForm(onSubmit) {\n        return this.templates.form(onSubmit);\n    }\n\n    renderThemeSelector(currentTheme, onChange) {\n        return this.templates.themeSelector(currentTheme, onChange);\n    }\n\n    renderLoading() {\n        return this.templates.loading();\n    }\n\n    renderError(message) {\n        return this.templates.error(message);\n    }\n\n    renderEmptyState() {\n        return this.templates.empty();\n    }\n\n    // Utility methods\n    formatDate(dateString) {\n        if (!dateString) return '';\n\n        const date = new Date(dateString);\n        const now = new Date();\n        const diffInHours = Math.floor((now - date) / (1000 * 60 * 60));\n\n        if (diffInHours < 1) return 'Just now';\n        if (diffInHours < 24) return `${diffInHours}h ago`;\n\n        return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n    }\n\n    formatContent(content) {\n        // Basic markdown-like formatting\n        return this.escapeHtml(content)\n            .replace(/\\n/g, '<br>')\n            .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n            .replace(/\\*(.*?)\\*/g, '<em>$1</em>');\n    }\n\n    escapeHtml(text) {\n        const div = document.createElement('div');\n        div.textContent = text;\n        return div.innerHTML;\n    }\n}","/**\n * Enhanced Theme Manager for Comment Widget\n * Integrates with the dashboard theme system\n */\n\nexport class ThemeManager {\n    constructor(currentTheme = 'default') {\n        this.currentTheme = currentTheme;\n        this.themes = {\n            'default': this.getDefaultTheme(),\n            'dark': this.getDarkTheme(),\n            'matrix': this.getMatrixTheme(),\n            'neocities': this.getNeocitiesTheme(),\n            'serene-mist': this.getSereneMistTheme(),\n            'neon-pulse': this.getNeonPulseTheme(),\n            'geometric-prime': this.getGeometricPrimeTheme(),\n            'forest-flow': this.getForestFlowTheme(),\n            'digital-chaos': this.getDigitalChaosTheme()\n        };\n        this.themeCSS = new Map();\n        this.transitionDuration = 300;\n        this.init();\n    }\n\n    init() {\n        // Listen for dashboard theme changes\n        document.addEventListener('themeChange', (e) => {\n            this.syncWithDashboard(e.detail.theme);\n        });\n\n        // Load external theme CSS\n        this.loadThemeCSS();\n    }\n\n    setTheme(theme, animate = true) {\n        if (!this.themes[theme]) {\n            console.warn(`Theme \"${theme}\" not found, falling back to default`);\n            theme = 'default';\n        }\n\n        const previousTheme = this.currentTheme;\n        this.currentTheme = theme;\n\n        // Apply theme with animation\n        this.applyTheme(animate);\n\n        // Dispatch custom event\n        this.dispatchThemeChange(previousTheme, theme);\n    }\n\n    syncWithDashboard(dashboardTheme) {\n        // Map dashboard themes to widget themes\n        const themeMapping = {\n            'default': 'default',\n            'dark': 'dark',\n            'matrix': 'matrix',\n            'neocities': 'neocities'\n        };\n\n        const widgetTheme = themeMapping[dashboardTheme] || 'default';\n        if (widgetTheme !== this.currentTheme) {\n            this.setTheme(widgetTheme, true);\n        }\n    }\n\n    applyTheme(animate = true) {\n        const theme = this.themes[this.currentTheme] || this.themes.default;\n\n        // Apply CSS variables\n        this.applyCSSVariables(theme, animate);\n\n        // Apply theme-specific effects\n        this.applyThemeEffects(theme);\n\n        // Update meta theme-color\n        this.updateMetaThemeColor(theme.colors.primary);\n    }\n\n    applyCSSVariables(theme, animate = true) {\n        const root = document.documentElement;\n\n        // Set transition properties\n        if (animate) {\n            root.style.setProperty('--widget-transition-duration', theme.transitions.duration);\n            root.style.setProperty('--widget-transition-easing', theme.transitions.easing);\n        } else {\n            root.style.setProperty('--widget-transition-duration', '0s');\n        }\n\n        // Apply colors\n        Object.entries(theme.colors).forEach(([key, value]) => {\n            root.style.setProperty(`--widget-${key}`, value);\n        });\n\n        // Apply typography\n        Object.entries(theme.fonts).forEach(([key, value]) => {\n            root.style.setProperty(`--widget-font-${key}`, value);\n        });\n\n        // Apply spacing\n        Object.entries(theme.spacing).forEach(([key, value]) => {\n            root.style.setProperty(`--widget-spacing-${key}`, value);\n        });\n\n        // Apply design tokens\n        root.style.setProperty('--widget-border-radius', theme.borderRadius);\n    }\n\n    applyThemeEffects(theme) {\n        // Remove existing theme classes\n        const widget = document.querySelector('comment-widget');\n        if (widget && widget.shadowRoot) {\n            const app = widget.shadowRoot.querySelector('#indie-comments-app');\n            if (app) {\n                app.className = app.className.replace(/theme-\\w+/g, '');\n                app.classList.add(`theme-${this.currentTheme}`);\n            }\n        }\n\n        // Apply theme-specific effects\n        switch (this.currentTheme) {\n            case 'matrix':\n                this.applyMatrixEffects();\n                break;\n            case 'neocities':\n                this.applyNeocitiesEffects();\n                break;\n            case 'dark':\n                this.applyDarkEffects();\n                break;\n            case 'serene-mist':\n                this.applySereneMistEffects();\n                break;\n            case 'neon-pulse':\n                this.applyNeonPulseEffects();\n                break;\n            case 'geometric-prime':\n                this.applyGeometricPrimeEffects();\n                break;\n            case 'forest-flow':\n                this.applyForestFlowEffects();\n                break;\n            case 'digital-chaos':\n                this.applyDigitalChaosEffects();\n                break;\n            default:\n                this.applyDefaultEffects();\n        }\n    }\n\n    applyMatrixEffects() {\n        // Matrix-specific effects can be added here\n        console.log('Matrix theme effects applied');\n    }\n\n    applyNeocitiesEffects() {\n        // NeoCities-specific effects can be added here\n        console.log('NeoCities theme effects applied');\n    }\n\n    applyDarkEffects() {\n        // Dark theme-specific effects can be added here\n        console.log('Dark theme effects applied');\n    }\n\n    applyDefaultEffects() {\n        // Default theme-specific effects can be added here\n        console.log('Default theme effects applied');\n    }\n\n    applySereneMistEffects() {\n        // Organic breathing animation\n        this.widgetElement.style.animation = 'serene-breath 4s ease-in-out infinite';\n    }\n\n    applyNeonPulseEffects() {\n        // Pulsing neon glow\n        this.widgetElement.style.animation = 'neon-pulse 2s ease-in-out infinite';\n    }\n\n    applyGeometricPrimeEffects() {\n        // 3D geometric transforms\n        this.widgetElement.style.animation = 'geometric-rotate 8s linear infinite';\n    }\n\n    applyForestFlowEffects() {\n        // Flowing wave animation\n        this.widgetElement.style.animation = 'forest-wave 6s ease-in-out infinite';\n    }\n\n    applyDigitalChaosEffects() {\n        // Glitch and scan line effects\n        this.widgetElement.style.animation = 'digital-glitch 0.3s ease-in-out infinite, scan-line 2s linear infinite';\n    }\n\n    updateMetaThemeColor(color) {\n        let metaThemeColor = document.querySelector('meta[name=\"theme-color\"]');\n        if (!metaThemeColor) {\n            metaThemeColor = document.createElement('meta');\n            metaThemeColor.name = 'theme-color';\n            document.head.appendChild(metaThemeColor);\n        }\n        metaThemeColor.content = color;\n    }\n\n    dispatchThemeChange(previousTheme, newTheme) {\n        document.dispatchEvent(new CustomEvent('commentWidgetThemeChange', {\n            detail: {\n                theme: newTheme,\n                previousTheme: previousTheme,\n                config: this.themes[newTheme]\n            }\n        }));\n    }\n\n    async loadThemeCSS() {\n        // Load external theme CSS files\n        const themeFiles = {\n            'dark': '/frontend/static/css/themes/dark.css',\n            'matrix': '/frontend/static/css/themes/matrix.css',\n            'neocities': '/frontend/static/css/themes/neocities.css'\n        };\n\n        for (const [theme, file] of Object.entries(themeFiles)) {\n            try {\n                const response = await fetch(file);\n                if (response.ok) {\n                    const css = await response.text();\n                    this.themeCSS.set(theme, css);\n                }\n            } catch (error) {\n                console.warn(`Failed to load theme CSS for ${theme}:`, error);\n            }\n        }\n    }\n\n    getThemeCSS(theme) {\n        return this.themeCSS.get(theme) || '';\n    }\n\n    // Theme definitions using CSS variables\n    getDefaultTheme() {\n        return `\n            /* Default theme with CSS variables */\n            .comment-widget {\n                font-family: var(--widget-font-family, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif);\n                max-width: 680px;\n                margin: 2rem auto;\n                padding: 1.5rem;\n                background: var(--widget-background, #fff);\n                border: 1px solid var(--widget-border, #e0e0e0);\n                border-radius: var(--widget-border-radius, 8px);\n                box-shadow: 0 2px 10px var(--widget-shadow, rgba(0,0,0,0.1));\n                color: var(--widget-text, #333);\n                transition: var(--widget-transition, all 0.3s ease);\n            }\n\n            .comment-header {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                margin-bottom: 1.5rem;\n                padding-bottom: 1rem;\n                border-bottom: 1px solid var(--widget-border, #e0e0e0);\n            }\n\n            .comment-header h3 {\n                margin: 0;\n                color: var(--widget-text, #333);\n                font-size: 1.5rem;\n                font-weight: 600;\n            }\n\n            .theme-selector {\n                padding: 0.5rem;\n                border: 1px solid var(--widget-border, #ddd);\n                border-radius: var(--widget-border-radius, 4px);\n                background: var(--widget-surface, #fff);\n                color: var(--widget-text, #333);\n                font-size: 0.9rem;\n            }\n\n            .comment-form {\n                background: var(--widget-surface, #f8f9fa);\n                padding: 1.5rem;\n                border-radius: var(--widget-border-radius, 6px);\n                margin-bottom: 2rem;\n                border: 1px solid var(--widget-border, #e9ecef);\n            }\n\n            .form-group {\n                margin-bottom: 1rem;\n            }\n\n            .form-group input,\n            .form-group textarea {\n                width: 100%;\n                padding: 0.75rem;\n                border: 1px solid var(--widget-border, #ddd);\n                border-radius: var(--widget-border-radius, 4px);\n                font-size: 1rem;\n                box-sizing: border-box;\n                font-family: inherit;\n                background: var(--widget-surface, #fff);\n                color: var(--widget-text, #333);\n                transition: var(--widget-transition, border-color 0.2s);\n            }\n\n            .form-group input:focus,\n            .form-group textarea:focus {\n                border-color: var(--widget-primary, #007cba);\n                box-shadow: 0 0 0 0.2rem rgba(0, 124, 186, 0.25);\n            }\n\n            .form-group textarea {\n                min-height: 100px;\n                resize: vertical;\n            }\n\n            .form-actions {\n                text-align: right;\n            }\n\n            .submit-btn {\n                background: var(--widget-primary, #007cba);\n                color: white;\n                border: none;\n                padding: 0.75rem 1.5rem;\n                border-radius: var(--widget-border-radius, 4px);\n                font-size: 1rem;\n                cursor: pointer;\n                transition: var(--widget-transition, background 0.2s);\n            }\n\n            .submit-btn:hover {\n                background: var(--widget-primary, #007cba);\n                opacity: 0.9;\n                transform: translateY(-1px);\n            }\n\n            .comment-list {\n                margin-top: 1.5rem;\n            }\n\n            .comment-item {\n                display: flex;\n                padding: 1rem;\n                margin-bottom: 1rem;\n                background: var(--widget-surface, #fff);\n                border: 1px solid var(--widget-border, #eee);\n                border-radius: var(--widget-border-radius, 6px);\n                border-left: 3px solid var(--widget-primary, #007cba);\n                transition: var(--widget-transition, all 0.2s);\n            }\n\n            .comment-item:hover {\n                transform: translateY(-1px);\n                box-shadow: 0 4px 12px var(--widget-shadow, rgba(0,0,0,0.1));\n            }\n\n            .comment-item.level-1 {\n                margin-left: 2rem;\n                border-left-width: 2px;\n                border-left-color: var(--widget-secondary, #888);\n            }\n\n            .comment-item.level-2 {\n                margin-left: 3rem;\n                border-left-width: 1px;\n                border-left-color: var(--widget-border, #ccc);\n            }\n\n            .comment-avatar {\n                margin-right: 1rem;\n                flex-shrink: 0;\n            }\n\n            .avatar-placeholder {\n                width: 40px;\n                height: 40px;\n                border-radius: 50%;\n                background: var(--widget-primary, #007cba);\n                color: white;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                font-weight: bold;\n                font-size: 1.1rem;\n            }\n\n            .comment-content {\n                flex: 1;\n            }\n\n            .comment-meta {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                margin-bottom: 0.5rem;\n                font-size: 0.9rem;\n            }\n\n            .comment-author {\n                font-weight: 600;\n                color: var(--widget-primary, #007cba);\n            }\n\n            .comment-date {\n                color: var(--widget-text-muted, #888);\n            }\n\n            .comment-text {\n                line-height: 1.6;\n                color: var(--widget-text, #444);\n                margin-bottom: 0.5rem;\n            }\n\n            .comment-actions {\n                font-size: 0.8rem;\n            }\n\n            .reply-btn {\n                background: none;\n                border: none;\n                color: var(--widget-primary, #007cba);\n                cursor: pointer;\n                text-decoration: underline;\n                font-size: 0.8rem;\n                transition: var(--widget-transition, color 0.2s);\n            }\n\n            .reply-btn:hover {\n                color: var(--widget-primary, #007cba);\n                opacity: 0.8;\n            }\n\n            .comment-replies {\n                margin-top: 1rem;\n                margin-left: 1rem;\n            }\n\n            .loading-state,\n            .error-state,\n            .empty-state {\n                text-align: center;\n                padding: 2rem;\n                font-style: italic;\n            }\n\n            .loading-state {\n                color: var(--widget-text-muted, #666);\n            }\n\n            .error-state {\n                color: var(--widget-danger, #dc3545);\n                background: rgba(220, 53, 69, 0.1);\n                border: 1px solid var(--widget-danger, #dc3545);\n                border-radius: var(--widget-border-radius, 4px);\n            }\n\n            .empty-state {\n                color: var(--widget-text-muted, #666);\n            }\n\n            .spinner {\n                border: 3px solid var(--widget-light, #f3f3f3);\n                border-top: 3px solid var(--widget-primary, #007cba);\n                border-radius: 50%;\n                width: 30px;\n                height: 30px;\n                animation: spin 1s linear infinite;\n                margin: 0 auto 1rem;\n            }\n\n            @keyframes spin {\n                0% { transform: rotate(0deg); }\n                100% { transform: rotate(360deg); }\n            }\n\n            @media (max-width: 768px) {\n                .comment-widget {\n                    margin: 1rem;\n                    padding: 1rem;\n                }\n\n                .comment-item.level-1,\n                .comment-item.level-2 {\n                    margin-left: 1rem;\n                }\n\n                .theme-selector {\n                    margin-top: 0.5rem;\n                    width: 100%;\n                }\n\n                .comment-header {\n                    flex-direction: column;\n                    align-items: stretch;\n                }\n            }\n        `;\n    }\n\n    getDarkTheme() {\n        return `\n            .comment-widget {\n                background: #2d2d2d;\n                border-color: #444;\n                color: #e0e0e0;\n                box-shadow: 0 2px 10px rgba(0,0,0,0.3);\n            }\n\n            .comment-header h3 {\n                color: #e0e0e0;\n            }\n\n            .theme-selector {\n                background: #3a3a3a;\n                border-color: #555;\n                color: #e0e0e0;\n            }\n\n            .comment-form {\n                background: #3a3a3a;\n                border-color: #555;\n            }\n\n            .form-group input,\n            .form-group textarea {\n                background: #3a3a3a;\n                border-color: #555;\n                color: #e0e0e0;\n            }\n\n            .submit-btn {\n                background: #4fc3f7;\n                color: #000;\n            }\n\n            .submit-btn:hover {\n                background: #29b6f6;\n            }\n\n            .comment-item {\n                background: #2d2d2d;\n                border-color: #444;\n                color: #e0e0e0;\n                border-left-color: #4fc3f7;\n            }\n\n            .comment-item.level-1 {\n                border-left-color: #888;\n            }\n\n            .comment-item.level-2 {\n                border-left-color: #ccc;\n            }\n\n            .avatar-placeholder {\n                background: #4fc3f7;\n                color: #000;\n            }\n\n            .comment-author {\n                color: #4fc3f7;\n            }\n\n            .comment-date {\n                color: #b0b0b0;\n            }\n\n            .comment-text {\n                color: #e0e0e0;\n            }\n\n            .reply-btn {\n                color: #4fc3f7;\n            }\n\n            .reply-btn:hover {\n                color: #29b6f6;\n            }\n\n            .loading-state,\n            .empty-state {\n                color: #b0b0b0;\n            }\n\n            .error-state {\n                color: #ff6b6b;\n                background: rgba(255, 107, 107, 0.1);\n                border-color: rgba(255, 107, 107, 0.3);\n            }\n        `;\n    }\n\n    getMatrixTheme() {\n        return `\n            .comment-widget {\n                background: #000;\n                border-color: #0a0;\n                color: #0f0;\n                font-family: 'Courier New', monospace;\n                box-shadow: 0 2px 10px rgba(0,255,0,0.1);\n            }\n\n            .comment-header h3 {\n                color: #0f0;\n            }\n\n            .theme-selector {\n                background: #010;\n                border-color: #080;\n                color: #0f0;\n                font-family: 'Courier New', monospace;\n            }\n\n            .comment-form {\n                background: #010;\n                border-color: #080;\n            }\n\n            .form-group input,\n            .form-group textarea {\n                background: #010;\n                border-color: #080;\n                color: #0f0;\n                font-family: 'Courier New', monospace;\n            }\n\n            .submit-btn {\n                background: #0a0;\n                color: #000;\n                font-family: 'Courier New', monospace;\n            }\n\n            .submit-btn:hover {\n                background: #0f0;\n                box-shadow: 0 0 5px rgba(0, 255, 0, 0.5);\n            }\n\n            .comment-item {\n                background: #000;\n                border-color: #0a0;\n                color: #0f0;\n                border-left-color: #0f0;\n                font-family: 'Courier New', monospace;\n            }\n\n            .comment-item.level-1 {\n                border-left-color: #080;\n            }\n\n            .comment-item.level-2 {\n                border-left-color: #040;\n            }\n\n            .avatar-placeholder {\n                background: #0f0;\n                color: #000;\n            }\n\n            .comment-author {\n                color: #0f0;\n            }\n\n            .comment-date {\n                color: #6b7280;\n            }\n\n            .comment-text {\n                color: #0f0;\n            }\n\n            .reply-btn {\n                color: #0f0;\n            }\n\n            .reply-btn:hover {\n                color: #0a0;\n                text-shadow: 0 0 3px rgba(0, 255, 0, 0.5);\n            }\n\n            .loading-state,\n            .empty-state {\n                color: #6b7280;\n            }\n\n            .error-state {\n                color: #ff4444;\n                background: rgba(255, 68, 68, 0.1);\n                border-color: rgba(255, 68, 68, 0.3);\n            }\n        `;\n    }\n\n    getNeocitiesTheme() {\n        return `\n            .comment-widget {\n                background: #ccffff;\n                border: 2px dashed #996699;\n                color: #330033;\n                box-shadow: 0 4px 15px rgba(153, 102, 153, 0.2);\n            }\n\n            .comment-header h3 {\n                color: #330033;\n            }\n\n            .theme-selector {\n                background: #ffff99;\n                border: 2px dotted #669966;\n                color: #330033;\n            }\n\n            .comment-form {\n                background: #ffff99;\n                border: 2px dotted #669966;\n            }\n\n            .form-group input,\n            .form-group textarea {\n                background: #ffff99;\n                border: 2px dotted #669966;\n                color: #330033;\n            }\n\n            .submit-btn {\n                background: #ffccff;\n                color: #330033;\n                border: 2px solid #996699;\n            }\n\n            .submit-btn:hover {\n                background: #ff99ff;\n            }\n\n            .comment-item {\n                background: #ccffff;\n                border: 2px dashed #996699;\n                color: #330033;\n                border-left: 4px solid #996699;\n            }\n\n            .comment-item.level-1 {\n                border-left-color: #669966;\n                border-left-style: dotted;\n            }\n\n            .comment-item.level-2 {\n                border-left-color: #cc99ff;\n                border-left-style: dashed;\n            }\n\n            .avatar-placeholder {\n                background: #ffccff;\n                color: #330033;\n                border: 2px solid #996699;\n            }\n\n            .comment-author {\n                color: #663399;\n                font-weight: bold;\n            }\n\n            .comment-date {\n                color: #666699;\n            }\n\n            .comment-text {\n                color: #330033;\n            }\n\n            .reply-btn {\n                color: #663399;\n                background: #ffccff;\n                border: 1px solid #996699;\n                padding: 0.2rem 0.5rem;\n                border-radius: 3px;\n            }\n\n            .reply-btn:hover {\n                background: #ff99ff;\n            }\n\n            .loading-state,\n            .empty-state {\n                color: #666699;\n            }\n\n            .error-state {\n                color: #cc0000;\n                background: rgba(255, 204, 204, 0.7);\n                border: 2px dashed #cc6666;\n            }\n        `;\n    }\n\n    getSereneMistTheme() {\n        return {\n            colors: {\n                primary: '#8B9D77',\n                secondary: '#A8B5A0',\n                background: '#F8F9F7',\n                surface: '#FFFFFF',\n                text: '#4A5D3A',\n                'text-muted': '#7A8F69',\n                border: '#D4E2D0',\n                light: '#F0F2EF',\n                danger: '#C17D5F'\n            },\n            fonts: {\n                family: \"'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif\",\n                size: '14px',\n                weight: '400'\n            },\n            spacing: {\n                small: '8px',\n                medium: '16px',\n                large: '24px'\n            },\n            borderRadius: '12px',\n            transitions: {\n                duration: '0.4s',\n                easing: 'cubic-bezier(0.4, 0, 0.2, 1)'\n            }\n        };\n    }\n\n    getNeonPulseTheme() {\n        return {\n            colors: {\n                primary: '#00FF88',\n                secondary: '#FF0080',\n                background: '#0A0A0A',\n                surface: '#1A1A1A',\n                text: '#FFFFFF',\n                'text-muted': '#888888',\n                border: '#333333',\n                light: '#2A2A2A',\n                danger: '#FF4444'\n            },\n            fonts: {\n                family: \"'JetBrains Mono', 'Courier New', monospace\",\n                size: '14px',\n                weight: '400'\n            },\n            spacing: {\n                small: '8px',\n                medium: '16px',\n                large: '24px'\n            },\n            borderRadius: '4px',\n            transitions: {\n                duration: '0.2s',\n                easing: 'ease-out'\n            }\n        };\n    }\n\n    getGeometricPrimeTheme() {\n        return {\n            colors: {\n                primary: '#FF6B35',\n                secondary: '#F7931E',\n                background: '#2C2C2C',\n                surface: '#3A3A3A',\n                text: '#FFFFFF',\n                'text-muted': '#CCCCCC',\n                border: '#555555',\n                light: '#4A4A4A',\n                danger: '#FF4444'\n            },\n            fonts: {\n                family: \"'IBM Plex Sans', sans-serif\",\n                size: '14px',\n                weight: '500'\n            },\n            spacing: {\n                small: '12px',\n                medium: '20px',\n                large: '32px'\n            },\n            borderRadius: '0px',\n            transitions: {\n                duration: '0.3s',\n                easing: 'ease-in-out'\n            }\n        };\n    }\n\n    getForestFlowTheme() {\n        return {\n            colors: {\n                primary: '#2D5A3D',\n                secondary: '#4A7C59',\n                background: '#F5F8F5',\n                surface: '#FFFFFF',\n                text: '#1A3D2A',\n                'text-muted': '#5A8F6B',\n                border: '#B8D4BB',\n                light: '#E8F5E8',\n                danger: '#8B4513'\n            },\n            fonts: {\n                family: \"'Crimson Text', serif\",\n                size: '15px',\n                weight: '400'\n            },\n            spacing: {\n                small: '10px',\n                medium: '18px',\n                large: '28px'\n            },\n            borderRadius: '16px',\n            transitions: {\n                duration: '0.5s',\n                easing: 'ease-in-out'\n            }\n        };\n    }\n\n    getDigitalChaosTheme() {\n        return {\n            colors: {\n                primary: '#FF00FF',\n                secondary: '#00FFFF',\n                background: '#000000',\n                surface: '#0F0F0F',\n                text: '#FFFFFF',\n                'text-muted': '#AAAAAA',\n                border: '#333333',\n                light: '#1A1A1A',\n                danger: '#FF0000'\n            },\n            fonts: {\n                family: \"'Share Tech Mono', monospace\",\n                size: '13px',\n                weight: '400'\n            },\n            spacing: {\n                small: '6px',\n                medium: '12px',\n                large: '18px'\n            },\n            borderRadius: '2px',\n            transitions: {\n                duration: '0.1s',\n                easing: 'step-end'\n            }\n        };\n    }\n}","/**\n * Utility functions for Comment Widget\n */\n\nexport class Utils {\n    static generateThreadId() {\n        // Generate thread ID based on current page URL\n        return btoa(window.location.href).replace(/[^a-zA-Z0-9]/g, '').substring(0, 16);\n    }\n\n    static generateId() {\n        return Date.now().toString(36) + Math.random().toString(36).substr(2);\n    }\n\n    static debounce(func, wait) {\n        let timeout;\n        return function executedFunction(...args) {\n            const later = () => {\n                clearTimeout(timeout);\n                func(...args);\n            };\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n        };\n    }\n\n    static throttle(func, limit) {\n        let inThrottle;\n        return function() {\n            const args = arguments;\n            const context = this;\n            if (!inThrottle) {\n                func.apply(context, args);\n                inThrottle = true;\n                setTimeout(() => inThrottle = false, limit);\n            }\n        }\n    }\n\n    static escapeHtml(text) {\n        const div = document.createElement('div');\n        div.textContent = text;\n        return div.innerHTML;\n    }\n\n    static formatDate(dateString) {\n        if (!dateString) return '';\n\n        const date = new Date(dateString);\n        const now = new Date();\n        const diffInSeconds = Math.floor((now - date) / 1000);\n        const diffInMinutes = Math.floor(diffInSeconds / 60);\n        const diffInHours = Math.floor(diffInMinutes / 60);\n        const diffInDays = Math.floor(diffInHours / 24);\n\n        if (diffInSeconds < 60) return 'Just now';\n        if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n        if (diffInHours < 24) return `${diffInHours}h ago`;\n        if (diffInDays < 7) return `${diffInDays}d ago`;\n\n        return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n    }\n\n    static formatContent(content) {\n        // Basic markdown-like formatting\n        return this.escapeHtml(content)\n            .replace(/\\n/g, '<br>')\n            .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n            .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n            .replace(/`(.*?)`/g, '<code>$1</code>')\n            .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" target=\"_blank\" rel=\"noopener\">$1</a>');\n    }\n\n    static validateEmail(email) {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    }\n\n    static validateComment(comment) {\n        const errors = [];\n\n        if (!comment.author_name || comment.author_name.trim().length < 2) {\n            errors.push('Name must be at least 2 characters long');\n        }\n\n        if (!comment.author_email || !this.validateEmail(comment.author_email)) {\n            errors.push('Please enter a valid email address');\n        }\n\n        if (!comment.content || comment.content.trim().length < 10) {\n            errors.push('Comment must be at least 10 characters long');\n        }\n\n        if (comment.content && comment.content.length > 2000) {\n            errors.push('Comment must be less than 2000 characters');\n        }\n\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n\n    static showNotification(message, type = 'info', duration = 3000) {\n        // Create notification element\n        const notification = document.createElement('div');\n        notification.className = `notification notification-${type}`;\n        notification.textContent = message;\n\n        // Style the notification\n        Object.assign(notification.style, {\n            position: 'fixed',\n            top: '20px',\n            right: '20px',\n            padding: '12px 16px',\n            borderRadius: '4px',\n            color: 'white',\n            fontSize: '14px',\n            zIndex: '10000',\n            opacity: '0',\n            transform: 'translateY(-20px)',\n            transition: 'all 0.3s ease',\n            maxWidth: '300px',\n            wordWrap: 'break-word'\n        });\n\n        // Set background color based on type\n        const colors = {\n            success: '#28a745',\n            error: '#dc3545',\n            warning: '#ffc107',\n            info: '#007bff'\n        };\n        notification.style.backgroundColor = colors[type] || colors.info;\n\n        // Add to page\n        document.body.appendChild(notification);\n\n        // Animate in\n        setTimeout(() => {\n            notification.style.opacity = '1';\n            notification.style.transform = 'translateY(0)';\n        }, 10);\n\n        // Remove after duration\n        setTimeout(() => {\n            notification.style.opacity = '0';\n            notification.style.transform = 'translateY(-20px)';\n            setTimeout(() => {\n                if (notification.parentNode) {\n                    notification.parentNode.removeChild(notification);\n                }\n            }, 300);\n        }, duration);\n    }\n\n    static copyToClipboard(text) {\n        if (navigator.clipboard && window.isSecureContext) {\n            return navigator.clipboard.writeText(text);\n        } else {\n            // Fallback for older browsers\n            const textArea = document.createElement('textarea');\n            textArea.value = text;\n            textArea.style.position = 'fixed';\n            textArea.style.left = '-999999px';\n            textArea.style.top = '-999999px';\n            document.body.appendChild(textArea);\n            textArea.focus();\n            textArea.select();\n            return new Promise((resolve, reject) => {\n                if (document.execCommand('copy')) {\n                    resolve();\n                } else {\n                    reject(new Error('Failed to copy text'));\n                }\n                document.body.removeChild(textArea);\n            });\n        }\n    }\n\n    static getViewportSize() {\n        return {\n            width: window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\n            height: window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n        };\n    }\n\n    static isMobile() {\n        return this.getViewportSize().width < 768;\n    }\n\n    static isTouchDevice() {\n        return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    }\n\n    static scrollToElement(element, offset = 0) {\n        if (!element) return;\n\n        const elementPosition = element.getBoundingClientRect().top;\n        const offsetPosition = elementPosition + window.pageYOffset - offset;\n\n        window.scrollTo({\n            top: offsetPosition,\n            behavior: 'smooth'\n        });\n    }\n\n    static animateElement(element, animation, duration = 300) {\n        if (!element) return Promise.resolve();\n\n        return new Promise((resolve) => {\n            element.style.animation = `${animation} ${duration}ms ease`;\n            setTimeout(() => {\n                element.style.animation = '';\n                resolve();\n            }, duration);\n        });\n    }\n\n    static deepClone(obj) {\n        if (obj === null || typeof obj !== 'object') return obj;\n        if (obj instanceof Date) return new Date(obj.getTime());\n        if (obj instanceof Array) return obj.map(item => this.deepClone(item));\n        if (typeof obj === 'object') {\n            const cloned = {};\n            Object.keys(obj).forEach(key => {\n                cloned[key] = this.deepClone(obj[key]);\n            });\n            return cloned;\n        }\n    }\n\n    static sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n}","/**\n * Comment Widget v2.0 - Improved Architecture\n * Modular, themeable, and API-integrated comment system\n */\n\nimport { APIClient } from './api.js';\nimport { CommentRenderer } from './renderer.js';\nimport { ThemeManager } from './theme-manager.js';\nimport { Utils } from './utils.js';\n\nclass CommentWidget extends HTMLElement {\n    constructor() {\n        super();\n\n        // Configuration from attributes\n        this.threadId = this.getAttribute('thread-id') || Utils.generateThreadId();\n        this.apiBaseUrl = this.getAttribute('api-base-url') || 'https://comment-widget-backend.vercel.app';\n        this.theme = this.getAttribute('theme') || 'default';\n        this.maxDepth = parseInt(this.getAttribute('max-depth')) || 3;\n\n        // Initialize components\n        this.api = new APIClient(this.apiBaseUrl);\n        this.renderer = new CommentRenderer();\n        this.themeManager = new ThemeManager(this.theme);\n\n        // Widget state\n        this.comments = [];\n        this.loading = false;\n        this.error = null;\n\n        // Create shadow DOM\n        this.shadow = this.attachShadow({ mode: 'open' });\n\n        // Initialize\n        this.init();\n    }\n\n    async init() {\n        try {\n            this.loading = true;\n            this.render();\n\n            // Load comments from API\n            await this.loadComments();\n\n            this.loading = false;\n            this.render();\n\n        } catch (error) {\n            console.error('Widget initialization error:', error);\n            this.error = error.message;\n            this.loading = false;\n            this.render();\n        }\n    }\n\n    async loadComments() {\n        try {\n            const response = await this.api.getComments(this.threadId);\n            this.comments = response.comments || [];\n        } catch (error) {\n            console.error('Error loading comments:', error);\n            this.error = 'Failed to load comments';\n        }\n    }\n\n    async submitComment(commentData) {\n        try {\n            this.loading = true;\n            this.render();\n\n            const result = await this.api.createComment({\n                thread_id: parseInt(this.threadId),\n                author_name: commentData.author_name,\n                author_email: commentData.author_email,\n                content: commentData.content,\n                parent_id: commentData.parent_id || null\n            });\n\n            // Reload comments after successful submission\n            await this.loadComments();\n\n            this.loading = false;\n            this.render();\n\n            return result;\n\n        } catch (error) {\n            console.error('Error submitting comment:', error);\n            this.error = error.message;\n            this.loading = false;\n            this.render();\n            throw error;\n        }\n    }\n\n    setTheme(theme) {\n        this.theme = theme;\n        this.themeManager.setTheme(theme);\n        this.render();\n    }\n\n    connectedCallback() {\n        // Listen for theme changes from page\n        document.addEventListener('themeChange', (e) => {\n            if (e.detail && e.detail.theme) {\n                this.setAttribute('theme', e.detail.theme);\n                this.setTheme(e.detail.theme);\n            }\n        });\n    }\n\n    render() {\n        // Load enhanced CSS\n        this.loadEnhancedCSS();\n\n        const styles = this.themeManager.getStyles();\n        const html = this.renderer.render({\n            comments: this.comments,\n            loading: this.loading,\n            error: this.error,\n            theme: this.theme,\n            maxDepth: this.maxDepth,\n            onSubmit: (data) => this.submitComment(data),\n            onThemeChange: (theme) => this.setTheme(theme)\n        });\n\n        this.shadow.innerHTML = `\n            <style>${styles}</style>\n            ${html}\n        `;\n    }\n\n    loadEnhancedCSS() {\n        // Load the enhanced widget CSS if not already loaded\n        if (!this.shadow.querySelector('#widget-enhanced-css')) {\n            const link = document.createElement('link');\n            link.id = 'widget-enhanced-css';\n            link.rel = 'stylesheet';\n            link.href = '/widget/src/widget.css';\n            this.shadow.appendChild(link);\n        }\n    }\n\n    // Public API methods\n    refresh() {\n        this.loadComments();\n    }\n\n    getComments() {\n        return this.comments;\n    }\n\n    getTheme() {\n        return this.theme;\n    }\n}\n\n// Register the custom element\ncustomElements.define('comment-widget', CommentWidget);\n\n// Auto-initialize when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    console.log('Comment Widget v2.0 loaded');\n});\n\n// Export for testing\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = { CommentWidget };\n}"],"names":["APIClient","constructor","baseUrl","this","defaultHeaders","request","endpoint","options","url","config","headers","response","fetch","ok","errorData","json","catch","Error","detail","status","statusText","error","name","message","includes","getComments","threadId","params","URLSearchParams","thread_id","createComment","commentData","method","body","JSON","stringify","updateComment","commentId","deleteComment","moderateComment","moderationData","getThread","createThread","threadData","getDemoThread","healthCheck","CommentRenderer","templates","widget","data","theme","showThemeSelector","renderThemeSelector","onThemeChange","renderError","loading","renderLoading","renderCommentForm","onSubmit","comments","length","map","comment","renderComment","maxDepth","join","renderEmptyState","level","id","author_name","charAt","toUpperCase","escapeHtml","formatDate","created_at","formatContent","content","replies","reply","form","themeSelector","currentTheme","onChange","empty","render","dateString","date","Date","now","diffInHours","Math","floor","toLocaleDateString","toLocaleTimeString","hour","minute","replace","text","div","document","createElement","textContent","innerHTML","ThemeManager","themes","default","getDefaultTheme","dark","getDarkTheme","matrix","getMatrixTheme","neocities","getNeocitiesTheme","getSereneMistTheme","getNeonPulseTheme","getGeometricPrimeTheme","getForestFlowTheme","getDigitalChaosTheme","themeCSS","Map","transitionDuration","init","addEventListener","e","syncWithDashboard","loadThemeCSS","setTheme","animate","console","warn","previousTheme","applyTheme","dispatchThemeChange","dashboardTheme","widgetTheme","applyCSSVariables","applyThemeEffects","updateMetaThemeColor","colors","primary","root","documentElement","style","setProperty","transitions","duration","easing","Object","entries","forEach","key","value","fonts","spacing","borderRadius","querySelector","shadowRoot","app","className","classList","add","applyMatrixEffects","applyNeocitiesEffects","applyDarkEffects","applySereneMistEffects","applyNeonPulseEffects","applyGeometricPrimeEffects","applyForestFlowEffects","applyDigitalChaosEffects","applyDefaultEffects","log","widgetElement","animation","color","metaThemeColor","head","appendChild","newTheme","dispatchEvent","CustomEvent","themeFiles","file","css","set","getThemeCSS","get","secondary","background","surface","border","light","danger","family","size","weight","small","medium","large","Utils","generateThreadId","btoa","window","location","href","substring","generateId","toString","random","substr","debounce","func","wait","timeout","args","clearTimeout","setTimeout","throttle","limit","inThrottle","arguments","context","apply","diffInSeconds","diffInMinutes","diffInDays","validateEmail","email","test","validateComment","errors","trim","push","author_email","isValid","showNotification","type","notification","assign","position","top","right","padding","fontSize","zIndex","opacity","transform","transition","maxWidth","wordWrap","success","warning","info","backgroundColor","parentNode","removeChild","copyToClipboard","navigator","clipboard","isSecureContext","writeText","textArea","left","focus","select","Promise","resolve","reject","execCommand","getViewportSize","width","innerWidth","clientWidth","height","innerHeight","clientHeight","isMobile","isTouchDevice","maxTouchPoints","scrollToElement","element","offset","offsetPosition","getBoundingClientRect","pageYOffset","scrollTo","behavior","animateElement","deepClone","obj","getTime","Array","item","cloned","keys","sleep","ms","CommentWidget","HTMLElement","super","getAttribute","apiBaseUrl","parseInt","api","renderer","themeManager","shadow","attachShadow","mode","loadComments","submitComment","result","parent_id","connectedCallback","setAttribute","loadEnhancedCSS","styles","getStyles","html","link","rel","refresh","getTheme","customElements","define","module","exports"],"mappings":"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"}